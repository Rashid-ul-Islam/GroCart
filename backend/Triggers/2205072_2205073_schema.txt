CREATE TABLE "Product" (
  "product_id" INT GENERATED BY DEFAULT AS IDENTITY PRIMARY KEY,
  "name" varchar NOT NULL,
  "category_id" int NOT NULL,
  "price" decimal(10,2) NOT NULL,
  "quantity" int NOT NULL,
  "unit_measure" varchar,
  "origin" varchar,
  "description" text,
  "is_refundable" boolean,
  "is_available" boolean,
  "created_at" timestamp DEFAULT (now()),
  "updated_at" timestamp
);

CREATE TABLE "ProductImage" (
  "image_id" INT GENERATED BY DEFAULT AS IDENTITY PRIMARY KEY,
  "product_id" int NOT NULL,
  "image_url" varchar NOT NULL,
  "is_primary" boolean DEFAULT false,
  "display_order" int,
  "created_at" timestamp DEFAULT (now())
);

CREATE TABLE "Category" (
  "category_id" INT GENERATED BY DEFAULT AS IDENTITY PRIMARY KEY,
  "parent_id" int,
  "name" varchar NOT NULL,
  "description" text,
  "cat_image" varchar,
  "created_at" timestamp DEFAULT (now())
);

CREATE TABLE "ProductCategory" (
  "product_id" int NOT NULL,
  "category_id" int NOT NULL,
  PRIMARY KEY ("product_id", "category_id")
);

CREATE TABLE "User" (
  "user_id" INT GENERATED BY DEFAULT AS IDENTITY PRIMARY KEY,
  "username" varchar UNIQUE NOT NULL,
  "email" varchar UNIQUE NOT NULL,
  "password_hash" varchar NOT NULL,
  "tier_id" int,
  "first_name" varchar,
  "last_name" varchar,
  "phone_number" varchar,
  "role_id" varchar DEFAULT 'customer',
  "created_at" timestamp DEFAULT (now()),
  "total_points" int,
  "total_points_last_update" timestamp,
  "last_login" timestamp
);

CREATE TABLE "UserTier" (
  "tier_id" INT GENERATED BY DEFAULT AS IDENTITY PRIMARY KEY,
  "name" varchar UNIQUE NOT NULL,
  "min_points" int NOT NULL,
  "max_points" int,
  "benefits" text
);

CREATE TABLE "ShoppingCart" (
  "cart_item_id" INT GENERATED BY DEFAULT AS IDENTITY PRIMARY KEY,
  "user_id" int NOT NULL,
  "product_id" int NOT NULL,
  "quantity" int NOT NULL DEFAULT 1,
  "added_at" timestamp DEFAULT (now()),
  "now_in_cart" boolean
);

CREATE TABLE "FavoriteProducts" (
  "user_id" int NOT NULL,
  "product_id" int NOT NULL,
  "added_at" timestamp DEFAULT (now()),
  PRIMARY KEY ("user_id", "product_id")
);

CREATE TABLE "Order" (
  "order_id" INT GENERATED BY DEFAULT AS IDENTITY PRIMARY KEY,
  "user_id" int NOT NULL,
  "order_date" timestamp,
  "total_amount" decimal(10,2) NOT NULL,
  "product_total" decimal(10,2) NOT NULL,
  "tax_total" decimal(10,2) NOT NULL,
  "shipping_total" decimal(10,2) NOT NULL,
  "discount_total" decimal(10,2) NOT NULL,
  "payment_method" varchar NOT NULL,
  "payment_status" varchar NOT NULL,
  "transaction_id" varchar,
  "created_at" timestamp,
  "updated_at" timestamp
);

CREATE TABLE "OrderItem" (
  "order_item_id" INT GENERATED BY DEFAULT AS IDENTITY PRIMARY KEY,
  "order_id" int NOT NULL,
  "product_id" int NOT NULL,
  "quantity" int NOT NULL,
  "price" decimal(10,2) NOT NULL
);

CREATE TABLE "ReturnRequest" (
  "return_id" INT GENERATED BY DEFAULT AS IDENTITY PRIMARY KEY,
  "order_item_id" int NOT NULL,
  "user_id" int NOT NULL,
  "reason" text,
  "status" varchar DEFAULT 'Requested',
  "requested_at" timestamp DEFAULT (now()),
  "approved_at" timestamp,
  "rejected_at" timestamp,
  "received_at" timestamp,
  "refunded_at" timestamp,
  "refund_amount" decimal(10,2),
  "refund_method" varchar,
  "refund_transaction_id" varchar,
  "drop_off_location_id" int,
  "comments" text,
  "processed_by" int
);

CREATE TABLE "Delivery" (
  "delivery_id" INT GENERATED BY DEFAULT AS IDENTITY PRIMARY KEY,
  "order_id" int NOT NULL,
  "address_id" int NOT NULL,
  "delivery_boy_id" int NOT NULL,
  "estimated_arrival" timestamp,
  "actual_arrival" timestamp,
  "is_aborted" boolean,
  "created_at" timestamp,
  "updated_at" timestamp
);

CREATE TABLE IF NOT EXISTS "StatusHistory" (
  "status_history_id" INT GENERATED BY DEFAULT AS IDENTITY PRIMARY KEY,
  "entity_type" varchar NOT NULL, -- 'order' or 'delivery'
  "entity_id" int NOT NULL,
  "status" varchar NOT NULL,
  "updated_at" timestamp DEFAULT (now()),
  "updated_by" int,
  "notes" text
);

CREATE TABLE "DeliveryBoy" (
  "user_id" INT GENERATED BY DEFAULT AS IDENTITY UNIQUE PRIMARY KEY NOT NULL,
  "availability_status" varchar DEFAULT 'available',
  "current_load" int,
  "delivery_region_id" int NOT NULL,
  "joined_date" timestamp
);

CREATE TABLE "DeliveryPerformance" (
  "delivery_boy_id" int NOT NULL,
  "delivery_id" int NOT NULL,
  "delivered_on_time" boolean,
  "customer_rating" int,
  "feedback" varchar,
  "recorded_at" timestamp DEFAULT (now()),
  PRIMARY KEY ("delivery_boy_id", "delivery_id")
);

CREATE TABLE "DeliveryReview" (
  "review_id" INT GENERATED BY DEFAULT AS IDENTITY PRIMARY KEY,
  "delivery_id" int NOT NULL,
  "delivery_boy_id" int NOT NULL,
  "customer_id" int NOT NULL,
  "rating" int NOT NULL,
  "comment" varchar,
  "review_date" timestamp DEFAULT (now()),
  "was_customer_available" boolean,
  "behavior" varchar
);

CREATE TABLE "SearchHistory" (
  "search_id" INT GENERATED BY DEFAULT AS IDENTITY PRIMARY KEY,
  "user_id" int,
  "search_query" varchar NOT NULL,
  "search_date" timestamp DEFAULT (now())
);

CREATE TABLE "Warehouse" (
  "warehouse_id" INT GENERATED BY DEFAULT AS IDENTITY PRIMARY KEY,
  "name" varchar NOT NULL,
  "location" varchar NOT NULL,
  "contact_info" varchar,
  "latitude" decimal(9,6) NOT NULL,
  "longitude" decimal(9,6) NOT NULL,
  "created_at" timestamp
);

CREATE TABLE "Address" (
  "address_id" INT GENERATED BY DEFAULT AS IDENTITY PRIMARY KEY,
  "user_id" int NOT NULL,
  "region_id" int NOT NULL,
  "address" varchar NOT NULL,
  "created_at" timestamp,
  "updated_at" timestamp,
  "isPrimary" boolean
);

CREATE TABLE "Review" (
  "review_id" INT GENERATED BY DEFAULT AS IDENTITY PRIMARY KEY,
  "product_id" int NOT NULL,
  "user_id" int NOT NULL,
  "rating" int NOT NULL,
  "comment" text,
  "review_date" timestamp DEFAULT (now()),
  "review_status" varchar DEFAULT 'pending',
  "verified_purchase" boolean DEFAULT false
);

CREATE TABLE "Inventory" (
  "inventory_id" INT GENERATED BY DEFAULT AS IDENTITY PRIMARY KEY,
  "product_id" int NOT NULL,
  "warehouse_id" int NOT NULL,
  "quantity_in_stock" int NOT NULL,
  "reorder_level" int,
  "last_restock_date" timestamp
);

CREATE TABLE "Division" (
  "division_id" INT GENERATED BY DEFAULT AS IDENTITY PRIMARY KEY,
  "name" varchar UNIQUE NOT NULL
);

CREATE TABLE "District" (
  "district_id" INT GENERATED BY DEFAULT AS IDENTITY PRIMARY KEY,
  "name" varchar NOT NULL,
  "division_id" int NOT NULL
);

CREATE TABLE "City" (
  "city_id" INT GENERATED BY DEFAULT AS IDENTITY PRIMARY KEY,
  "name" varchar NOT NULL,
  "district_id" int NOT NULL
);

CREATE TABLE "DeliveryRegion" (
  "delivery_region_id" INT GENERATED BY DEFAULT AS IDENTITY PRIMARY KEY,
  "name" varchar NOT NULL,
  "latitude" decimal(9,6) NOT NULL,
  "longitude" decimal(9,6) NOT NULL,
  "warehouse_id" int NOT NULL,
  "created_at" timestamp,
  "updated_at" timestamp
);

CREATE TABLE "Region" (
  "region_id" INT GENERATED BY DEFAULT AS IDENTITY PRIMARY KEY,
  "name" varchar NOT NULL,
  "city_id" int NOT NULL,
  "delivery_region_id" int
);

CREATE TABLE "Coupon" (
  "coupon_id" INT GENERATED BY DEFAULT AS IDENTITY PRIMARY KEY,
  "code" varchar UNIQUE NOT NULL,
  "description" text,
  "discount_type" varchar NOT NULL,
  "discount_value" decimal(10,2) NOT NULL,
  "min_purchase" decimal(10,2),
  "max_discount" decimal(10,2),
  "start_date" timestamp NOT NULL,
  "end_date" timestamp NOT NULL,
  "is_active" boolean DEFAULT true,
  "usage_limit" int,
  "usage_count" int DEFAULT 0,
  "applied__tiers" enum
);

CREATE TABLE "OrderCoupon" (
  "order_id" int NOT NULL,
  "coupon_id" int NOT NULL,
  "discount_amount" decimal(10,2) NOT NULL,
  PRIMARY KEY ("order_id", "coupon_id")
);

CREATE INDEX ON "ShoppingCart" ("user_id", "product_id");

CREATE INDEX ON "OrderItem" ("order_id", "product_id");

CREATE INDEX IF NOT EXISTS idx_status_history_entity 
ON "StatusHistory" ("entity_type", "entity_id", "updated_at");

CREATE INDEX ON "DeliveryReview" ("delivery_id");

CREATE INDEX ON "DeliveryReview" ("customer_id");

CREATE INDEX ON "SearchHistory" ("user_id", "search_date");

CREATE INDEX ON "Address" ("user_id");

CREATE INDEX ON "Review" ("product_id");

CREATE INDEX ON "Review" ("user_id");

CREATE UNIQUE INDEX ON "Inventory" ("product_id", "warehouse_id");

CREATE INDEX ON "Coupon" ("code");

ALTER TABLE "Product" ADD FOREIGN KEY ("category_id") REFERENCES "Category" ("category_id");

ALTER TABLE "ProductImage" ADD FOREIGN KEY ("product_id") REFERENCES "Product" ("product_id");

ALTER TABLE "Category" ADD FOREIGN KEY ("parent_id") REFERENCES "Category" ("category_id");

ALTER TABLE "ProductCategory" ADD FOREIGN KEY ("product_id") REFERENCES "Product" ("product_id");

ALTER TABLE "ProductCategory" ADD FOREIGN KEY ("category_id") REFERENCES "Category" ("category_id");

ALTER TABLE "User" ADD FOREIGN KEY ("tier_id") REFERENCES "UserTier" ("tier_id");

ALTER TABLE "ShoppingCart" ADD FOREIGN KEY ("user_id") REFERENCES "User" ("user_id");

ALTER TABLE "ShoppingCart" ADD FOREIGN KEY ("product_id") REFERENCES "Product" ("product_id");

ALTER TABLE "FavoriteProducts" ADD FOREIGN KEY ("user_id") REFERENCES "User" ("user_id");

ALTER TABLE "FavoriteProducts" ADD FOREIGN KEY ("product_id") REFERENCES "Product" ("product_id");

ALTER TABLE "Order" ADD FOREIGN KEY ("user_id") REFERENCES "User" ("user_id");

ALTER TABLE "OrderItem" ADD FOREIGN KEY ("order_id") REFERENCES "Order" ("order_id");

ALTER TABLE "OrderItem" ADD FOREIGN KEY ("product_id") REFERENCES "Product" ("product_id");

ALTER TABLE "ReturnRequest" ADD FOREIGN KEY ("order_item_id") REFERENCES "OrderItem" ("order_item_id");

ALTER TABLE "ReturnRequest" ADD FOREIGN KEY ("user_id") REFERENCES "User" ("user_id");

ALTER TABLE "ReturnRequest" ADD FOREIGN KEY ("drop_off_location_id") REFERENCES "Warehouse" ("warehouse_id");

ALTER TABLE "ReturnRequest" ADD FOREIGN KEY ("processed_by") REFERENCES "User" ("user_id");

ALTER TABLE "Delivery" ADD FOREIGN KEY ("order_id") REFERENCES "Order" ("order_id");

ALTER TABLE "Delivery" ADD FOREIGN KEY ("address_id") REFERENCES "Address" ("address_id");

ALTER TABLE "Delivery" ADD FOREIGN KEY ("delivery_boy_id") REFERENCES "DeliveryBoy" ("user_id");

ALTER TABLE "StatusHistory" ADD CONSTRAINT fk_status_history_updated_by 
FOREIGN KEY ("updated_by") REFERENCES "User" ("user_id");

ALTER TABLE "DeliveryBoy" ADD FOREIGN KEY ("user_id") REFERENCES "User" ("user_id");

ALTER TABLE "DeliveryBoy" ADD FOREIGN KEY ("delivery_region_id") REFERENCES "DeliveryRegion" ("delivery_region_id");

ALTER TABLE "DeliveryPerformance" ADD FOREIGN KEY ("delivery_boy_id") REFERENCES "DeliveryBoy" ("user_id");

ALTER TABLE "DeliveryPerformance" ADD FOREIGN KEY ("delivery_id") REFERENCES "Delivery" ("delivery_id");

ALTER TABLE "DeliveryReview" ADD FOREIGN KEY ("delivery_id") REFERENCES "Delivery" ("delivery_id");

ALTER TABLE "DeliveryReview" ADD FOREIGN KEY ("delivery_boy_id") REFERENCES "DeliveryBoy" ("user_id");

ALTER TABLE "DeliveryReview" ADD FOREIGN KEY ("customer_id") REFERENCES "User" ("user_id");

ALTER TABLE "SearchHistory" ADD FOREIGN KEY ("user_id") REFERENCES "User" ("user_id");

ALTER TABLE "Address" ADD FOREIGN KEY ("user_id") REFERENCES "User" ("user_id");

ALTER TABLE "Address" ADD FOREIGN KEY ("region_id") REFERENCES "Region" ("region_id");

ALTER TABLE "Review" ADD FOREIGN KEY ("product_id") REFERENCES "Product" ("product_id");

ALTER TABLE "Review" ADD FOREIGN KEY ("user_id") REFERENCES "User" ("user_id");

ALTER TABLE "Inventory" ADD FOREIGN KEY ("product_id") REFERENCES "Product" ("product_id");

ALTER TABLE "Inventory" ADD FOREIGN KEY ("warehouse_id") REFERENCES "Warehouse" ("warehouse_id");

ALTER TABLE "District" ADD FOREIGN KEY ("division_id") REFERENCES "Division" ("division_id");

ALTER TABLE "City" ADD FOREIGN KEY ("district_id") REFERENCES "District" ("district_id");

ALTER TABLE "DeliveryRegion" ADD FOREIGN KEY ("warehouse_id") REFERENCES "Warehouse" ("warehouse_id");

ALTER TABLE "Region" ADD FOREIGN KEY ("city_id") REFERENCES "City" ("city_id");

ALTER TABLE "Region" ADD FOREIGN KEY ("delivery_region_id") REFERENCES "DeliveryRegion" ("delivery_region_id");

ALTER TABLE "OrderCoupon" ADD FOREIGN KEY ("order_id") REFERENCES "Order" ("order_id");

ALTER TABLE "OrderCoupon" ADD FOREIGN KEY ("coupon_id") REFERENCES "Coupon" ("coupon_id");
