-- DELIVERY STATUS ENHANCEMENT SCHEMA (CONSOLIDATED APPROACH)
-- This file has been updated to use the consolidated StatusHistory approach
-- instead of the separate DeliveryStatusTracker table to avoid redundancy with OrderStatusHistory

-- Note: The DeliveryStatusTracker table is no longer needed.
-- Use the consolidated StatusHistory table instead (see migration_consolidated_status.sql)

-- Create unified StatusHistory table that handles both orders and deliveries
CREATE TABLE IF NOT EXISTS "StatusHistory" (
  "status_history_id" INT GENERATED BY DEFAULT AS IDENTITY PRIMARY KEY,
  "entity_type" varchar NOT NULL, -- 'order' or 'delivery'
  "entity_id" int NOT NULL,
  "status" varchar NOT NULL,
  "updated_at" timestamp DEFAULT (now()),
  "updated_by" int,
  "notes" text
);

-- Add foreign key constraints
ALTER TABLE "StatusHistory" ADD CONSTRAINT fk_status_history_updated_by 
FOREIGN KEY ("updated_by") REFERENCES "User" ("user_id");

-- Add warehouse product request table (specific to delivery workflow)
CREATE TABLE IF NOT EXISTS "WarehouseProductRequest" (
  "request_id" INT GENERATED BY DEFAULT AS IDENTITY PRIMARY KEY,
  "delivery_id" int NOT NULL,
  "requesting_warehouse_id" int NOT NULL,
  "target_warehouse_id" int NOT NULL,
  "product_id" int NOT NULL,
  "requested_quantity" int NOT NULL,
  "status" varchar DEFAULT 'pending',
  "requested_at" timestamp DEFAULT (now()),
  "fulfilled_at" timestamp,
  "notes" text
);

-- Add foreign key constraints for warehouse product request
ALTER TABLE "WarehouseProductRequest" ADD CONSTRAINT fk_warehouse_request_delivery 
FOREIGN KEY ("delivery_id") REFERENCES "Delivery" ("delivery_id");
ALTER TABLE "WarehouseProductRequest" ADD CONSTRAINT fk_warehouse_request_requesting 
FOREIGN KEY ("requesting_warehouse_id") REFERENCES "Warehouse" ("warehouse_id");
ALTER TABLE "WarehouseProductRequest" ADD CONSTRAINT fk_warehouse_request_target 
FOREIGN KEY ("target_warehouse_id") REFERENCES "Warehouse" ("warehouse_id");
ALTER TABLE "WarehouseProductRequest" ADD CONSTRAINT fk_warehouse_request_product 
FOREIGN KEY ("product_id") REFERENCES "Product" ("product_id");

-- Update Delivery table to add current status
DO $$ 
BEGIN 
  IF NOT EXISTS (
    SELECT 1 FROM information_schema.columns 
    WHERE table_name = 'Delivery' AND column_name = 'current_status'
  ) THEN
    ALTER TABLE "Delivery" ADD COLUMN "current_status" varchar DEFAULT 'assigned';
  END IF;
END $$;

-- Add indexes for better performance
CREATE INDEX IF NOT EXISTS idx_status_history_entity 
ON "StatusHistory" ("entity_type", "entity_id", "updated_at");
CREATE INDEX IF NOT EXISTS idx_warehouse_request_delivery 
ON "WarehouseProductRequest" ("delivery_id", "status");

-- Migration note:
-- To consolidate existing OrderStatusHistory data with this new approach,
-- run the migration_consolidated_status.sql script.
