-- Coupon Management Database Setup
-- This script should be run if the Coupon table doesn't already exist

-- Create the Coupon table (if it doesn't exist)
CREATE TABLE IF NOT EXISTS public."Coupon" (
  coupon_id integer GENERATED BY DEFAULT AS IDENTITY NOT NULL,
  code character varying NOT NULL,
  description text NULL,
  discount_type character varying NOT NULL,
  discount_value numeric(10, 2) NOT NULL,
  min_purchase numeric(10, 2) NULL,
  max_discount numeric(10, 2) NULL,
  start_date timestamp without time zone NOT NULL,
  end_date timestamp without time zone NOT NULL,
  is_active boolean NULL DEFAULT true,
  usage_limit integer NULL,
  usage_count integer NULL DEFAULT 0,
  applied_tiers integer NULL,
  created_at timestamp DEFAULT (now()),
  updated_at timestamp,
  CONSTRAINT Coupon_pkey PRIMARY KEY (coupon_id),
  CONSTRAINT Coupon_code_key UNIQUE (code)
) TABLESPACE pg_default;

-- Create index on code for faster lookups (if it doesn't exist)
CREATE INDEX IF NOT EXISTS "Coupon_code_idx" 
ON public."Coupon" USING btree (code) 
TABLESPACE pg_default;

-- Add foreign key constraint for applied_tiers (if UserTier table exists)
-- This assumes the UserTier table exists and has a tier_id column
DO $$
BEGIN
    IF NOT EXISTS (
        SELECT 1 FROM information_schema.table_constraints 
        WHERE constraint_name = 'fk_coupon_applied_tiers'
    ) THEN
        ALTER TABLE public."Coupon" 
        ADD CONSTRAINT fk_coupon_applied_tiers 
        FOREIGN KEY (applied_tiers) 
        REFERENCES public."UserTier" (tier_id);
    END IF;
END $$;

-- Create OrderCoupon table for tracking coupon usage (if it doesn't exist)
CREATE TABLE IF NOT EXISTS public."OrderCoupon" (
  order_id int NOT NULL,
  coupon_id int NOT NULL,
  discount_amount numeric(10, 2) NOT NULL,
  applied_at timestamp DEFAULT (now()),
  PRIMARY KEY (order_id, coupon_id)
) TABLESPACE pg_default;

-- Add foreign key constraints for OrderCoupon table
DO $$
BEGIN
    IF NOT EXISTS (
        SELECT 1 FROM information_schema.table_constraints 
        WHERE constraint_name = 'fk_order_coupon_order'
    ) THEN
        ALTER TABLE public."OrderCoupon" 
        ADD CONSTRAINT fk_order_coupon_order 
        FOREIGN KEY (order_id) 
        REFERENCES public."Order" (order_id) 
        ON DELETE CASCADE;
    END IF;
END $$;

DO $$
BEGIN
    IF NOT EXISTS (
        SELECT 1 FROM information_schema.table_constraints 
        WHERE constraint_name = 'fk_order_coupon_coupon'
    ) THEN
        ALTER TABLE public."OrderCoupon" 
        ADD CONSTRAINT fk_order_coupon_coupon 
        FOREIGN KEY (coupon_id) 
        REFERENCES public."Coupon" (coupon_id) 
        ON DELETE CASCADE;
    END IF;
END $$;

-- Create indexes for better performance
CREATE INDEX IF NOT EXISTS idx_coupon_active_dates 
ON public."Coupon" (is_active, start_date, end_date) 
WHERE is_active = true;

CREATE INDEX IF NOT EXISTS idx_coupon_applied_tiers 
ON public."Coupon" (applied_tiers) 
WHERE applied_tiers IS NOT NULL;

CREATE INDEX IF NOT EXISTS idx_order_coupon_coupon_id 
ON public."OrderCoupon" (coupon_id);

-- Insert some sample data (optional)
INSERT INTO public."Coupon" (
    code, description, discount_type, discount_value, 
    start_date, end_date, is_active, usage_limit
) VALUES 
    ('WELCOME10', '10% discount for new customers', 'percentage', 10.00, 
     CURRENT_DATE, CURRENT_DATE + INTERVAL '30 days', true, 100),
    ('SAVE50', '$50 off on orders above $200', 'fixed', 50.00, 
     CURRENT_DATE, CURRENT_DATE + INTERVAL '15 days', true, 50),
    ('BLACKFRIDAY', 'Black Friday 25% off', 'percentage', 25.00, 
     CURRENT_DATE - INTERVAL '1 day', CURRENT_DATE + INTERVAL '7 days', true, 200)
ON CONFLICT (code) DO NOTHING;

-- Show created tables and their structure
\d public."Coupon"
\d public."OrderCoupon"

-- Show sample data
SELECT * FROM public."Coupon" LIMIT 5;
